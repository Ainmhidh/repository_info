#!/usr/bin/perl -w

use FindBin;
use lib "$FindBin::Bin/../perl_lib";

use EPrints;

use strict;
use warnings;

my ($repo_id) = @ARGV;
die "generate_repository_info *repository_id*\n" unless $repo_id;

my $repo = EPrints->new->repository($repo_id);
die "Couldn't load repository $repo_id\n" unless $repo;

my $config = $repo->config('repository_info_config');
my $categories = $repo->config('repository_info');
die "couldn't load configuration\n" unless $config;

my $pairs = generate_pairs();
my $page = generate_page($pairs);
write_page($page);


sub generate_pairs
{
	my $pairs = [];

	my $category_ids = $repo->config('repository_info_config','categories');
	return $pairs unless $category_ids;

	foreach my $category_id (@{$category_ids})
	{
		my $category_data = $repo->config('repository_info',$category_id);
		next unless $category_data;

		my $add_pair_fn = sub
		{
			my ($item_modifier, $value) = @_;
			my $item = $item_modifier->[0];
			my $modifier = $item_modifier->[1];

			my $tag = $repo->call('repository_info_generate_tag', $category_id, $item, $modifier);
			$repo->call('repository_info_add_pair', $pairs, $tag, $value); 
		};

		if (ref $category_data eq 'CODE')
		{
			&{$category_data}($repo,$add_pair_fn);
		}
		elsif (ref $category_data eq 'ARRAY')
		{
			foreach my $pair (@{$category_data})
			{
				my $tag_parts = $pair->[0];
				my $value = $pair->[1];
				if (ref $value eq 'CODE')
				{
					&{$add_pair_fn}($tag_parts, &{$value}($repo));
				}
				else
				{
					&{$add_pair_fn}($tag_parts, $value);
				}
				
			}
		}

	}

	return $pairs;
}


sub write_page
{
	my ($page) = @_;

	foreach my $langid ( @{$repo->config( "languages" )} )
	{
		my $filename = $repo->config('repository_info_config','filename');
		$filename = '_info.html' unless $filename;

		my $target_file = $repo->config( "htdocs_path" );
		$target_file .= "/$langid/";
		$target_file .= $filename;

		open FILE, ">$target_file" or die "couldn't open $target_file for writing\n";
		print FILE $page->toString(1);
		close FILE;
	}
}


sub generate_page
{
	my ($pairs) = @_;

	my $xml = $repo->xml;
	my $html = $xml->create_element('html');
	my $head = $xml->create_element('head');
	my $body = $xml->create_element('body');
	$html->appendChild($head);
	$html->appendChild($body);

	$head->appendChild(pairs_as_meta_tags($pairs));
	$body->appendChild(pairs_as_table($pairs));
	return $html;
}


sub pairs_as_table
{
	my ($pairs) = @_;
	my $xml = $repo->xml;

	my $table = $xml->create_element('table');

	foreach my $pair (@{$pairs})
	{
		$table->appendChild(table_row(@{$pair}));
	}

	return $table;
}

sub pairs_as_meta_tags
{
	my ($pairs) = @_;

	my $frag = $repo->xml->create_document_fragment;

	foreach my $pair (@{$pairs})
	{
		$frag->appendChild(meta_tag(@{$pair}));
	}

	return $frag;
}

sub table_row
{
	my ($name, $content) = @_;
	my $xml = $repo->xml;

	my $tr = $xml->create_element('tr');
	my $td = $xml->create_element('td');
	$tr->appendChild($td);
	$td->appendChild($xml->create_text_node($name));

	$td = $xml->create_element('td');
	$tr->appendChild($td);
	$td->appendChild($xml->create_text_node($content));

	return $tr;
}

sub meta_tag
{
	my ($name, $content) = @_;

	return $repo->xml->create_element('meta', name => $name, content => $content);
}



